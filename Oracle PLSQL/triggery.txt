
----  TRIGGERY  8 ---
--8.1
CREATE OR REPLACE TRIGGER trigger_przy_dodawaniu_rezerwacji
  after insert on REZERWACJE
  FOR EACH ROW
  BEGIN
    INSERT into REZERWACJE_LOG(NR_REZERWACJI, DATA, STATUS) values(:NEW.NR_REZERWACJI,current_date,:NEW.STATUS);
  END;

--9.1
CREATE OR REPLACE TRIGGER triger_przy_dodawaniu_rezerwacji2
  after insert on REZERWACJE
  FOR EACH ROW
  BEGIN
    UPDATE WYCIECZKI wy set wy.LICZBA_WOLNYCH_MIEJSC = wy.LICZBA_WOLNYCH_MIEJSC - 1
     where wy.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
  END;

--8.2
CREATE OR REPLACE TRIGGER triger_przy_zmianie_statusu_rezerwacji
  after update on REZERWACJE
  FOR EACH ROW
  BEGIN
    INSERT into REZERWACJE_LOG(NR_REZERWACJI, DATA, STATUS) values(:OLD.NR_REZERWACJI,current_date,:NEW.STATUS);
  END;

 --9.2
CREATE OR REPLACE TRIGGER triger_przy_zmianie_statusu_rezerwacji2
  AFTER UPDATE ON REZERWACJE
  FOR EACH ROW
  BEGIN
    IF(:NEW.STATUS = 'A') THEN
          UPDATE WYCIECZKI wy set wy.LICZBA_WOLNYCH_MIEJSC = wy.LICZBA_WOLNYCH_MIEJSC + 1
          where wy.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
    ELSE
      if(:OLD.STATUS = 'A') THEN
        UPDATE WYCIECZKI wy set wy.LICZBA_WOLNYCH_MIEJSC = wy.LICZBA_WOLNYCH_MIEJSC - 1
          where wy.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
      END IF;
    END IF;
  END;


--8.3
CREATE OR REPLACE TRIGGER triger_zabraniaj¹cy_usuniêcia_rezerwacji
  before delete on REZERWACJE
  FOR EACH ROW
  BEGIN
      RAISE_APPLICATION_ERROR(-20011,'Nie mo¿na usuwaæ rezerwacji, mo¿esz zmieniæ status na Anulowana');
    --INSERT into REZERWACJE_LOG(NR_REZERWACJI, DATA, STATUS) values(:OLD.NR_REZERWACJI,current_date,:NEW.STATUS);
  END;


--9.3
CREATE OR REPLACE TRIGGER triger_po_zmianie_liczby_miejsc_dla_wycieczki
  before update on WYCIECZKI
  referencing OLD as old NEW as new
  FOR EACH ROW
  BEGIN
    :new.LICZBA_WOLNYCH_MIEJSC :=
    :old.LICZBA_WOLNYCH_MIEJSC + :new.LICZBA_MIEJSC - :old.LICZBA_MIEJSC;
  END;


BEGIN
  update wycieczki set LICZBA_MIEJSC = 20 where WYCIECZKI.ID_WYCIECZKI =41;
END;
